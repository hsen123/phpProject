<?php

namespace App\Repository;

use App\Entity\Email;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Symfony\Bridge\Doctrine\RegistryInterface;


/**
 * EmailRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class EmailRepository extends ServiceEntityRepository
{

    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, Email::class);
    }

    public function findBySnapshotResultId($snapshotResultId)
    {
        return $this
            ->createQueryBuilder('e')
            ->select("e.emailAddress")
            ->where('e.resultSnapshot = :id')
            ->setParameter('id', $snapshotResultId)
            ->getQuery()->getArrayResult();
    }

    public function findBySnapshotAnalysisId($snapshotAnalysisId)
    {
        return $this
            ->createQueryBuilder('e')
            ->select("e.emailAddress")
            ->where('e.analysisSnapshot = :id')
            ->setParameter('id', $snapshotAnalysisId)
            ->getQuery()->getArrayResult();
    }

    public function findByDynamicResultId($dynamicResultId)
    {
        return $this
            ->createQueryBuilder('e')
            ->select("e.emailAddress")
            ->where('e.dynamicResult = :id')
            ->setParameter('id', $dynamicResultId)
            ->getQuery()->getArrayResult();
    }

    public function findByDynamicAnalysisId($dynamicAnalysisId)
    {
        return $this
            ->createQueryBuilder('e')
            ->select("e.emailAddress")
            ->where('e.dynamicAnalysis = :id')
            ->setParameter('id', $dynamicAnalysisId)
            ->getQuery()->getArrayResult();
    }
}
